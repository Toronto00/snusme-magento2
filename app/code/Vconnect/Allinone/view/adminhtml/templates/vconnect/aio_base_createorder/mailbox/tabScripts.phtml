<?php
/*
 * The MIT License
 *
 * Copyright 2016 vConnect.dk
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * @category Magento
 * @package Vconnect_AllInOne
 * @author vConnect
 * @email kontakt@vconnect.dk
 * @template app/design/frontend/base/default/template/vconnect/aio/dk/home/scripts.phtml
 */

$allinone_data = $this->getData('allinone_data');
$allinone_config = $this->getData('allinone_config');
$dataHelper = $this->getDataHelper();
?>

<script type="text/javascript">
require([
    'jquery',
    'jquery/ui',
    'prototype'
], function(
    jQuery
) {
    jQuery(function($){
        var shipContryVal = $('select[name="order[shipping_address][country_id]"]:last').val();
        var shipPostcodeVal = $('input[name="order[shipping_address][postcode]"]:last').val();
        var shipStreetVal = $('input[name="order[shipping_address][street][]"]:first').val();
        var billContryVal = $('select[name="order[billing_address][country_id]"]:last').val();
        var billPostcodeVal = $('input[name="order[billing_address][postcode]"]:last').val();
        var billStreetVal = $('input[name="order[billing_address][street][]"]:first').val();

        if ($('input[name="shipping_as_billing"]').length > 0 && $('input[name="shipping_as_billing"]').is(':checked')) {
           shipContryVal = '';
           shipPostcodeVal = '';
           shipStreetVal = '';
        }

        var country_id  = (shipContryVal !== '')?shipContryVal:billContryVal;
        var postcode  = (shipPostcodeVal !== '')?shipPostcodeVal:billPostcodeVal;
        var street  = (shipStreetVal !== '')?shipStreetVal:billStreetVal;

        if (country_id != '' && postcode == '') {
            if (country_id == 'SE') {
                postcode = '10044';
            } else if (country_id == 'FI') {
                postcode = '00100';
            } else if (country_id == 'NO') {
                postcode = '0107';
            } else if (country_id == 'DK') {
                postcode = '1000';
            }
        }

        var html_nearest_point = '';

        if ($('.nearest_point_container').length > 0) {
            getPickupPoints(country_id,postcode,street,function (points) {
                var nearest_point_monFriOpen = (typeof points[0].openingHours !== 'undefined')
                    ?points[0].openingHours[0].from1.insertString(2, 0, ":"):'';
                var nearest_point_monFriClose = (typeof points[0].openingHours !== 'undefined')
                    ?points[0].openingHours[0].to1.insertString(2, 0, ":"):'';
                var nearest_point_satOpen = (typeof points[0].openingHours !== 'undefined')
                    ?points[0].openingHours[points[0].openingHours.length-1].from1.insertString(2, 0, ":"):'';
                var nearest_point_satClose = (typeof points[0].openingHours !== 'undefined')
                    ?points[0].openingHours[points[0].openingHours.length-1].to1.insertString(2, 0, ":"):'';

                html_nearest_point = '<div class="aino-nearest-data">';
                html_nearest_point += '<div class="aino-nearest-name">' +points[0].name + '</div>';
                html_nearest_point += '<div class="aino-nearest-address">' + points[0].visitingAddress.streetName + ', ' + points[0].visitingAddress.streetNumber + '</div>';
                html_nearest_point += '<div class="aino-work-hours">' +
                        '<?php echo __('Mon'); ?>-<?php echo __('Fri'); ?>: '+nearest_point_monFriOpen +' - '+ nearest_point_monFriClose +'<br/>' +
                        '<?php echo __('Sat'); ?>: '+nearest_point_satOpen +' - '+ nearest_point_satClose +
                        '</div>';
                html_nearest_point += '</div>';
                $('.nearest_point_container').show().find('.vc-value').html(html_nearest_point);
            });
        }

        function getPickupPoints(country_id,postcode,street,callback) {
            var dataToSend = {
                country_id  : country_id,
                postcode    : postcode
            };

            if(street){
                dataToSend.street = street;
            }

            $.ajax({
                url     : pointsEndpoint,
                type    : 'POST',
                data    : dataToSend
            }).done(function (data) {
                if( typeof data.postnord.servicePointInformationResponse === 'undefined')
                {
                    if( typeof data.postnord.message !== 'undefined'){
                        console.error(data.postnord.message);
                    }
                    return console.log('Pickup api\'s return unknown error');
                }
                var points = data.postnord.servicePointInformationResponse.servicePoints;

                if(callback) {
                    callback(points);
                }
            });
        }

        $('div[data-code=<?php echo $allinone_data['code'] ?>]').appendTo($('input[value=<?php echo $allinone_data['code'] ?>]').parent());
    });
});
</script>
